@using BetterSteamBrowser.Domain.Enums
@using BetterSteamBrowser.Domain.ValueObjects
@using Humanizer
@using BetterSteamBrowser.Business.ViewModels
@using System.Text
@using Humanizer.Localisation

<RadzenRow JustifyContent="JustifyContent.Center">
    <RadzenColumn SizeSM="12" SizeMD="10" SizeXX="8">
        <RadzenCard>
            <RadzenRow JustifyContent="JustifyContent.Center" class="rz-mb-4">
                <RadzenColumn SizeSM="12" SizeMD="12" SizeLG="3" SizeXL="6" SizeXX="6">
                    <RadzenText TextAlign="TextAlign.Start" TextStyle="TextStyle.DisplayH4" class="rz-mb-0 rz-mt-2">
                        @_titleText
                    </RadzenText>
                </RadzenColumn>
                <RadzenColumn SizeSM="12" SizeMD="12" SizeLG="9" SizeXL="6" SizeXX="6">
                    <RadzenRow AlignItems="AlignItems.End" JustifyContent="JustifyContent.End">
                        <RadzenColumn SizeSM="12" SizeMD="4">
                            <RadzenFormField Text="Select Region" Variant="Variant.Outlined" Style="width: 100%; min-width: 240px;">
                                <ChildContent>
                                    <RadzenDropDown TValue="string" @bind-Value="@_regionFilterSelected" Data="@_regionFilterData" AllowClear="true"
                                                    FilterAsYouType="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                                    Change="OnDropdownChanged" Placeholder="Select Region"/>
                                </ChildContent>
                            </RadzenFormField>
                        </RadzenColumn>
                        <RadzenColumn SizeSM="12" SizeMD="4">
                            <RadzenFormField Text="Select Game" Variant="Variant.Outlined" Style="width: 100%; min-width: 240px;">
                                <ChildContent>
                                    <RadzenDropDown TValue="SteamGame" @bind-Value="@_gamesFilterSelected" Data="@_gamesFilterData" AllowClear="true"
                                                    FilterAsYouType="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                                    Change="OnDropdownChanged" Placeholder="Select Game" LoadData="GameLoadData"/>
                                </ChildContent>
                            </RadzenFormField>
                        </RadzenColumn>
                        <RadzenColumn SizeSM="12" SizeMD="4">
                            <RadzenFormField Text="Search" Variant="Variant.Outlined" Style="width: 100%; min-width: 240px;">
                                <ChildContent>
                                    <RadzenTextBox @bind-Value="_searchString" Change="OnSearch"/>
                                </ChildContent>
                                <End>
                                    <RadzenIcon Icon="search" IconStyle="IconStyle.Info"/>
                                </End>
                            </RadzenFormField>
                        </RadzenColumn>
                    </RadzenRow>
                </RadzenColumn>
            </RadzenRow>
            <RadzenDataGrid @ref="_dataGrid" TItem="Server" IsLoading="@_isLoading" Count="@_count" Data="@_serverTable" LoadData="@TableLoadData"
                            Density="Density.Compact" AllowPaging="true" PageSize="25" AllowSorting="true" Sort="OnSort" PagerAlwaysVisible="true"
                            PagerHorizontalAlign="HorizontalAlign.Center" PageSizeOptions="@PageSizes" ShowPagingSummary="true"
                            PagingSummaryFormat="Displaying page {0} of {1} <b>(total {2} records)</b>" AllowColumnResize="true"
                            RowClick="RowClickEvent" Style="min-height: 200px;" class="rz-selectable">
                <Columns>
                    <RadzenDataGridColumn TItem="Server" Property="Country" Width="50px" TextAlign="TextAlign.Center" Frozen="true">
                        <Template Context="context">
                            @{
                                var path = "/images/unknown_country.png";
                                if (!string.IsNullOrWhiteSpace(context.CountryCode))
                                {
                                    var flag = context.CountryCode.ToLower();
                                    path = $"https://flagcdn.com/w80/{flag}.png";
                                }
                            }
                            <RadzenImage Path="@path" AlternateText="@context.Country" Style="width:30px" class="rz-border-radius"/>
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Server" Property="Name" Title="Name" MinWidth="250px" Width="450px"/>
                    <RadzenDataGridColumn TItem="Server" Property="Address" Title="Address" MinWidth="100px" Width="175px"/>
                    <RadzenDataGridColumn TItem="Server" Property="SteamGameName" Title="Game" Sortable="false" MinWidth="60px"/>
                    <RadzenDataGridColumn TItem="Server" Property="Map" Title="Map" MinWidth="100px"/>
                    <RadzenDataGridColumn TItem="Server" Property="Players" Title="Players" SortOrder="SortOrder.Descending" MinWidth="80px">
                        <Template Context="context">
                            @{
                                var players = context.Players;
                                var maxPlayers = context.MaxPlayers;
                                var queueDelta = players - maxPlayers;

                                var textResult = new StringBuilder();

                                if (queueDelta > 0) textResult.Append($"{maxPlayers:N0}/{maxPlayers:N0} (+{queueDelta:N0})");
                                else textResult.Append($"{players:N0}/{maxPlayers:N0}");
                            }
                            <RadzenText TextStyle="TextStyle.Body2" class="@(players >= maxPlayers ? "rz-color-base-200" : string.Empty)">
                                @textResult.ToString()
                            </RadzenText>
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Server" Property="LastUpdated" Title="Last Seen" MinWidth="120px">
                        <Template Context="context">
                            @{
                                var lastSeenFormat = GetTimeStatusAndColour(context.LastUpdated);
                            }
                            <RadzenText TextStyle="TextStyle.Body2" class="@lastSeenFormat.TimeClass">
                                @lastSeenFormat.TimeStatus
                            </RadzenText>
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Server" Property="Created" Title="First Seen" MinWidth="120px">
                        <Template Context="context">
                            <RadzenText TextStyle="TextStyle.Body2" Text="@context.Created.Humanize()"
                                        MouseEnter="@(args => ShowTooltip(args, new TooltipOptions {Position = TooltipPosition.Left}, context.Created.ToString("yyyy-MM-dd @ HH:mm:ss")))">
                            </RadzenText>
                        </Template>
                    </RadzenDataGridColumn>
                    @if (Manager)
                    {
                        <RadzenDataGridColumn TItem="Server" Property="PlayerAverage" Title="Player Avg." MinWidth="80px">
                            <Template Context="context">
                                <RadzenText TextStyle="TextStyle.Body2">@(context.PlayerAverage is 0 ? "--" : context.PlayerAverage.ToString("N3"))</RadzenText>
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="Server" Property="PlayersStandardDeviation" Title="Player Std." MinWidth="80px">
                            <Template Context="context">
                                <RadzenText TextStyle="TextStyle.Body2" class="@PlayerStandardDeviationColour(context.PlayersStandardDeviation)">
                                    @(context.PlayersStandardDeviation?.ToString("N2") ?? "--")
                                </RadzenText>
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="Server" Sortable="false" Title="Player Bounds" MinWidth="140px">
                            <Template Context="context">
                                @{
                                    var hasBounds = context.PlayerUpper > 0;
                                }
                                <RadzenText TextStyle="TextStyle.Body2">
                                    @(hasBounds ? $"LB: {context.PlayerLower:N0}, UB: {context.PlayerUpper:N0}" : "--")
                                </RadzenText>
                            </Template>
                        </RadzenDataGridColumn>
                    }
                    @if (!string.IsNullOrWhiteSpace(UserId) && !Manager)
                    {
                        <RadzenDataGridColumn TItem="Server" Width="40px" TextAlign="TextAlign.Center" Sortable="false" Frozen="true">
                            <Template Context="iContext">
                                <RadzenButton Icon="@(iContext.Favourite ? "star" : "star_border")" ButtonStyle="@(iContext.Favourite ? ButtonStyle.Success : ButtonStyle.Primary)" Shade="Shade.Lighter" Size="ButtonSize.ExtraSmall"
                                              MouseEnter="@(args => ShowTooltip(args, new TooltipOptions {Position = TooltipPosition.Left}, iContext.Favourite ? "Favourited" : "Not Favourited"))"/>
                            </Template>
                        </RadzenDataGridColumn>
                    }
                </Columns>
                <EmptyTemplate>
                    <RadzenText TextAlign="TextAlign.Center" TextStyle="TextStyle.H6" class="rz-my-4" Text="There are no servers..."/>
                </EmptyTemplate>
            </RadzenDataGrid>
        </RadzenCard>
    </RadzenColumn>
</RadzenRow>
